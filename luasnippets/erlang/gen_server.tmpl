-module(Â£).

-behaviour(gen_server).

%% API
-export([start_link/0]).

%% gen_server callbacks
-export([init/1, handle_call/3, handle_cast/2, handle_info/2, handle_continue/2, terminate/2, code_change/3]).

-define(SERVER, ?MODULE).

-type state() :: #{}.

%%%===================================================================
%%% API
%%%===================================================================

server_opts() ->
	%% [{debug, [log, trace]}].
	[].

start_link() ->
	gen_server:start_link({local, ?SERVER}, ?MODULE, [], server_opts()).

%%%===================================================================
%%% gen_server callbacks
%%%===================================================================

-spec init([]) -> {ok, state(), {continue, term()}}.
init([]) ->
	{ok, #{}}.

handle_call({a, Data}, _From, State) ->
	Reply = ok,
	{reply, Reply, State};
handle_call(Request, _From, _State) ->
	error({unhandled_call, Request}).

handle_cast({b, _Data}, State) ->
	{noreply, State};
handle_cast(Msg, _State) ->
	error({unhandled_cast, Msg}).

handle_info({c, _Data}, State) ->
	{noreply, State};
handle_info(Info, _State) ->
	error({unhandled_info, Info}).

handle_continue({d, _Data}, State) ->
	{noreply, State};
handle_continue(Continue, _State) ->
	error({unhandled_continue, Continue}).

terminate(_Reason, _State) ->
	ok.

code_change(_OldVsn, State, _Extra) ->
	{ok, State}.

%%%===================================================================
%%% Internal functions
%%%===================================================================


